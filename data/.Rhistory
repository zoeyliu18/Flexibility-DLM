data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", 'Pronominality'))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', 'Pronominality'))
data$Language = factor(data$Language, levels=c('Japanese', 'Hindi', 'Urdu'))
d<-subset(data, Factor=="Dependency length")
head(d)
head(c)
data<-read.csv(file="preposition-mix.csv",header=T,sep=",")
data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", 'Pronominality'))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', 'Pronominality'))
data$Language = factor(data$Language, levels=c('Dutch', 'German', 'Catalan', 'Spanish', 'Croatian', 'Czech', 'Polish', 'Russian', 'Slovak', 'Slovenian'))
data1 <- subset(data, Adposition == 'postverbal')
data2 <- subset(data, Adposition == 'preverbal')
head(data1)
e<-subset(data1, Factor=="Dependency length")
f<-subset(data2, Factor=="Dependency length")
head(e)
head(f)
all<-cbind(a,b,c,d,e,f)
all<-rbind(a,b,c,d,e,f)
head(all)
names(all)=c("Language",'Adposition','Position','Factor','Mean','CI25','CI975')
nrow(all)
data<-read.csv(file="postposition-mix.csv",header=T,sep=",")
data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", 'Pronominality'))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', 'Pronominality'))
data1 <- subset(data, Adposition == 'postverbal')
data2 <- subset(data, Adposition == 'preverbal')
g<-subset(data1, Factor=="Dependency length")
h<-subset(data2, Factor=="Dependency length")
head(g)
head(h)
all=rbind(a,b,c,d,e,f,g,h)
head(a)
head(all)
names(all)=c("Language",'Adposition','Position','Factor','Mean','CI25','CI975')
head(all)
head(flexibility)
nrow(flexibility)
nrow(all)
eve<-cbind(flexibility,all)
head(eve)
write.csv(all,'all.csv',header=T,sep=',')
head(all)
write.csv(all,'all.csv',header=T,sep=',')
write.csv(all,'all.csv',row.names=FALSE)
write.csv(flexibility,'f.csv',row.names=FALSE)
all<-read.csv('all.csv',header=T,sep=',')
flexibility<-read.csv('f.csv',header=T,sep=',')
head(all)
head(flexibility)
eve<-cbind(all,flexibility)
head(eve)
head(flexibility)
flexibility$Language==all$Language
flexibility$Position==all$Position
flexibility$Adposition==all$Adposition
flex<-data.frame(flexibility$Mean)
names(flex)<-c('flexibility')
head(a)
head(all)
head(flex)
flex$dependency<-all$Mean
head(flex)
cor(flex,method='spearman')
cor(flex,method='pearson')
head(eve)
write.csv(eve,'correlation.csv',row.names=FALSE)
head(all)
all$flexibility=flexibility$Mean
head(all)
head(flexibility)
preverbal<-subset(all,Position=='preverbal')
t1<-data.frame(preverbal$Mean)
head(t1)
t1$flexibility=preverbal$flexibility
cor(t1,method='spearman')
cor(t2,method='pearson')
cor(t1,method='pearson')
postverbal<-subset(all,Position='postverbal')
t2<-data.frame(postverbal$Mean)
t2$flexibility<-postverbal$flexibility
cor(t2,method='spearman')
cor(t2,method='pearson')
nrow(all)
t3<-data.frame(all$Mean)
t3$flexibility=all$flexibility
cor(t3,method='spearman')
cor(t3,method='pearson')
head(all)
head(preverbal)
mean(preverbal$flexibility)
mean(postverbal$flexibility)
all
all
setwd("~/Desktop/Experiments/adjective")
setwd("~/Desktop/Experiments/hnpm/codes")
data<-read.csv(file="variability.csv",header=T,sep=",")
data$Structure <- paste(data[,3],data[,2])
data$Language<-factor(data$Language,levels=c("Arabic", "Hebrew", "Indonesian", "Greek", "Wolof", "Irish", "Latvian", "Danish", "English", "Swedish", "Norwegian", "Portuguese",
"Romanian", "French", "Galician", "Italian", "Bulgarian", "Serbian", "Ukrainian", "Finnish",
"Afrikaans", "Persian", "Japanese", "Hindi", "Urdu", "Catalan", "Spanish", "Dutch", "German", "Croatian", "Czech",
"Polish", "Russian", "Slovak", "Slovenian", "Estonian"))
data
postverbal<-subset(data,Language %in% c('Arabic', 'Hebrew', 'Indonesian', 'Greek', 'Wolof', 'Irish', 'Latvian', 'Danish', 'English', 'Swedish', 'Norwegian', 'Portuguese', 'Romanian', 'French', 'Galician', 'Italian', 'Bulgarian', 'Serbian', 'Ukrainian','Finnish'))
head(postverbal)
mean(postverbal$Mean)
preverbal<-subset(data,Language %in% c('Afrikaans', 'Persian','Japanese','Hindi','Urdu'))
nrow(postverbal)
nrow(preverbal)
mean(preverbal$Mean)
mixed<-subset(data,Language %in% c('Catalan','Spanish','Dutch','German','Croatian','Czech','Polish','Russian','Slovak','Slovenian','Estonian'))
nrow(mixed)
mixed_preverbal<-subset(mixed,Position =='preverbal')
mean(mixed_preverbal$Mean)
mixed_postverbal<-subset(mixed,Posiiton=='postverbal')
mixed_postverbal<-subset(mixed,Position=='postverbal')
mean(mixed_postverbal$Mean)
head(all)
preverbal_all=subset(all,Language %in% Language %in% c('Arabic', 'Hebrew', 'Indonesian', 'Greek', 'Wolof', 'Irish', 'Latvian', 'Danish', 'English', 'Swedish', 'Norwegian', 'Portuguese', 'Romanian', 'French', 'Galician', 'Italian', 'Bulgarian', 'Serbian', 'Ukrainian','Finnish'))
postverbal_all=subset(all,Language %in% Language %in% c('Arabic', 'Hebrew', 'Indonesian', 'Greek', 'Wolof', 'Irish', 'Latvian', 'Danish', 'English', 'Swedish', 'Norwegian', 'Portuguese', 'Romanian', 'French', 'Galician', 'Italian', 'Bulgarian', 'Serbian', 'Ukrainian','Finnish'))
preverbal_all=subset(all,Language %in% c('Afrikaans', 'Persian','Japanese','Hindi','Urdu'))
mixed_all=subset(all,Language %in% c('Catalan','Spanish','Dutch','German','Croatian','Czech','Polish','Russian','Slovak','Slovenian','Estonian'))
t1<-data.frame(postverbal$Mean)
t1<-data.frame(postverbal_all$Mean)
t1$flexibility<-postverbal_all$flexibility
corr(t1,method='spearman')
cor(t1,method='spearman')
head(t1)
t1<-data.frame(postverbal_all$Mean)
t1
postverbal_all$Mean
postverbal_all=subset(all,Language %in% c('Arabic', 'Hebrew', 'Indonesian', 'Greek', 'Wolof', 'Irish', 'Latvian', 'Danish', 'English', 'Swedish', 'Norwegian', 'Portuguese', 'Romanian', 'French', 'Galician', 'Italian', 'Bulgarian', 'Serbian', 'Ukrainian','Finnish'))
t1<-data.frame(postverbal_all$Mean)
t1$flexibility<-postverbal_all$flexibility
head(t1)
cor(t1,method='spearman')
t2<-data.frame(preverbal_all$flexibility)
t2<-data.frame(preverbal_all$Mean)
t2$flexibility<-preverbal_all$flexibility
cor(t2,method='spearman')
t3<-data.frame(mixed_all$Mean)
t3$flexibility<-mixed_all$flexibility
cor(t3,method='spearman')
install.packages('patchwork')
library(patchwork)
ggplot(data) +
geom_point(aes(x=t1$flexibility, y=t1$postverbal_all.Mean),colour="grey50")+
geom_abline(aes(slope=line1.slope,intercept=line1.intercept),colour="#F8766D")+ # draw the regression line
#force consistent size of x/y axis
coord_equal() +
#style the plot
theme_minimal() +
theme(panel.grid=element_blank(),
text=element_text(colour="grey50"),
axis.title=element_text(colour="grey50"),
axis.text=element_text(colour="grey50"),
legend.text=element_text(colour="grey50")) -> scatter_with_yx #this plot is saved for later
#print the plot
scatter_with_yx + labs(title="Linear regression fit y~x overlaid on simulated data",caption="Viz by @stevejburr")
line1 <- lm(t1$postverbal_all.Mean~t1$flexibility)$coef
#extract the slope from the fitted model
line1.slope <- line1[2]
#extract the intercept from the fitted model
line1.intercept <- line1[1]
ggplot(data) +
geom_point(aes(x=t1$flexibility, y=t1$postverbal_all.Mean),colour="grey50")+
geom_abline(aes(slope=line1.slope,intercept=line1.intercept),colour="#F8766D")+ # draw the regression line
#force consistent size of x/y axis
coord_equal() +
#style the plot
theme_minimal() +
theme(panel.grid=element_blank(),
text=element_text(colour="grey50"),
axis.title=element_text(colour="grey50"),
axis.text=element_text(colour="grey50"),
legend.text=element_text(colour="grey50")) -> scatter_with_yx #this plot is saved for later
#print the plot
scatter_with_yx + labs(title="Linear regression fit y~x overlaid on simulated data",caption="Viz by @stevejburr")
line1 <- lm(t1$postverbal_all.Mean~t1$flexibility)$coef
line1.slope <- line1[2]
#extract the intercept from the fitted model
line1.intercept <- line1[1]
line1.intercept
line1.slope
ggplot(t1) +
geom_point(aes(x=t1$flexibility, y=t1$postverbal_all.Mean),colour="grey50")+
geom_abline(aes(slope=line1.slope,intercept=line1.intercept),colour="#F8766D")+ # draw the regression line
#force consistent size of x/y axis
coord_equal() +
#style the plot
theme_minimal() +
theme(panel.grid=element_blank(),
text=element_text(colour="grey50"),
axis.title=element_text(colour="grey50"),
axis.text=element_text(colour="grey50"),
legend.text=element_text(colour="grey50")) -> scatter_with_yx #this plot is saved for later
#print the plot
scatter_with_yx + labs(title="Linear regression fit y~x overlaid on simulated data",caption="Viz by @stevejburr")
scatter_with_yx + labs(title="") +xlab('flexibility') + ylab('Effect for dependency length')
nrow(t1)
line1 <- lm(t2$postverbal_all.Mean~t2$flexibility)$coef
#extract the slope from the fitted model
line1.slope <- line1[2]
#extract the intercept from the fitted model
line1.intercept <- line1[1]
ggplot(t2) +
geom_point(aes(x=t2$flexibility, y=t2$postverbal_all.Mean),colour="grey50")+
geom_abline(aes(slope=line1.slope,intercept=line1.intercept),colour="#F8766D")+ # draw the regression line
#force consistent size of x/y axis
coord_equal() +
#style the plot
theme_minimal() +
theme(panel.grid=element_blank(),
text=element_text(colour="grey50"),
axis.title=element_text(colour="grey50"),
axis.text=element_text(colour="grey50"),
legend.text=element_text(colour="grey50")) -> scatter_with_yx #this plot is saved for later
#print the plot
scatter_with_yx + labs(title="") +xlab('flexibility') + ylab('Effect for dependency length')
head(t2)
line1 <- lm(t2$preverbal_all.Mean~t2$flexibility)$coef
#extract the slope from the fitted model
line1.slope <- line1[2]
#extract the intercept from the fitted model
line1.intercept <- line1[1]
ggplot(t2) +
geom_point(aes(x=t2$flexibility, y=t2$preverbal_all.Mean),colour="grey50")+
geom_abline(aes(slope=line1.slope,intercept=line1.intercept),colour="#F8766D")+ # draw the regression line
#force consistent size of x/y axis
coord_equal() +
#style the plot
theme_minimal() +
theme(panel.grid=element_blank(),
text=element_text(colour="grey50"),
axis.title=element_text(colour="grey50"),
axis.text=element_text(colour="grey50"),
legend.text=element_text(colour="grey50")) -> scatter_with_yx #this plot is saved for later
#print the plot
scatter_with_yx + labs(title="") +xlab('flexibility') + ylab('Effect for dependency length')
cor(t1,method='spearman')
cor(t2,method='spearman')
head(mixed_all)
mixed_all_preverbal<-subset(mixed_all,Position=='preverbal')
mixed_all_postverbal<-subset(mixed_all,Position=='postverbal')
t3=data.frame(mixed_all_preverbal$Mean)
t3$flexibility<-mixed_all_preverbal$flexibility
cor(t3,method='spearman')
t4=data.frame(mixed_all_postverbal$Mean)
t4$flexibility<-mixed_all_postverbal$flexibility
cor(t4,method='spearman')
t5<-data.frame(all$Mean)
t5$flexibility<-all$flexibility
cor(t5,method='spearman')
cor(t5,method='pearson')
data1<-read.csv(file="preposition-postverbal.csv",header=T,sep=",")
setwd("~/Desktop/Experiments/hnpm/codes")
setwd("~/Desktop/Experiments/hnpm/compare")
data1<-read.csv(file="preposition-postverbal.csv",header=T,sep=",")
data2<-read.csv(file="postposition-postverbal.csv",header=T,sep=",")
head(data1)
a<-rbind(data1,data2)
nrow(data1)
nrow(data2)
nrow(a)
tail(a)
data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", "Pronominality"))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', 'Pronominality'))
data$Language = factor(data$Language, levels=c('Arabic', 'Hebrew', 'Indonesian', 'Greek', 'Wolof', 'Irish', 'Latvian', 'Danish', 'English', 'Swedish',
'Norwegian', 'Portuguese', 'Romanian', 'French', 'Galician', 'Italian', 'Bulgarian', 'Serbian', 'Ukrainian', 'Finnish'))
p<-ggplot(data, aes(x=Factor,y=Mean,color=Factor)) +
geom_errorbar(aes(ymax = CI975, ymin = CI25), width=.1, position=position_dodge(.9)) +
#  geom_line() +
geom_point() +
#  geom_text(aes(label=Parameters), vjust=-1,position=position_dodge(.9),size=2.5)+
labs(x="Factors")+labs(fill='Factor')+
scale_y_continuous(limits=c(-3.5,4)) +
labs(y="Coefficient") +
scale_color_manual(values=wes_palette(n=3, name="IsleofDogs1"))+
facet_wrap(~Language,ncol=5)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank()) +
theme(legend.position="top")
p
data=a
data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", "Pronominality"))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', 'Pronominality'))
data$Language = factor(data$Language, levels=c('Arabic', 'Hebrew', 'Indonesian', 'Greek', 'Wolof', 'Irish', 'Latvian', 'Danish', 'English', 'Swedish',
'Norwegian', 'Portuguese', 'Romanian', 'French', 'Galician', 'Italian', 'Bulgarian', 'Serbian', 'Ukrainian', 'Finnish'))
p<-ggplot(data, aes(x=Factor,y=Mean,color=Factor)) +
geom_errorbar(aes(ymax = CI975, ymin = CI25), width=.1, position=position_dodge(.9)) +
#  geom_line() +
geom_point() +
#  geom_text(aes(label=Parameters), vjust=-1,position=position_dodge(.9),size=2.5)+
labs(x="Factors")+labs(fill='Factor')+
scale_y_continuous(limits=c(-3.5,4)) +
labs(y="Coefficient") +
scale_color_manual(values=wes_palette(n=3, name="IsleofDogs1"))+
facet_wrap(~Language,ncol=5)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank()) +
theme(legend.position="top")
p
nrow(data)
a<-rbind(data1,data2)
data=a
nrow(a)
nrow(data)
data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", "Pronominality"))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', 'Pronominality'))
data$Language = factor(data$Language, levels=c('Arabic', 'Hebrew', 'Indonesian', 'Greek', 'Wolof', 'Irish', 'Latvian', 'Danish', 'English', 'Swedish',
'Norwegian', 'Portuguese', 'Romanian', 'French', 'Galician', 'Italian', 'Bulgarian', 'Serbian', 'Ukrainian', 'Finnish'))
p<-ggplot(data, aes(x=Factor,y=Mean,color=Factor)) +
geom_errorbar(aes(ymax = CI975, ymin = CI25), width=.1, position=position_dodge(.9)) +
#  geom_line() +
geom_point() +
#  geom_text(aes(label=Parameters), vjust=-1,position=position_dodge(.9),size=2.5)+
labs(x="Factors")+labs(fill='Factor')+
scale_y_continuous(limits=c(-3.5,4)) +
labs(y="Coefficient") +
scale_color_manual(values=wes_palette(n=3, name="IsleofDogs1"))+
facet_wrap(~Language,ncol=5)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank()) +
theme(legend.position="top")
p
ggsave('chapter5-postverbal-coeff.pdf',p)
ggsave('chapter5-postverbal-coeff.pdf',p)
data1<-read.csv(file="preposition-preverbal.csv",header=T,sep=",")
data2<-read.csv(file="postposition-preverbal.csv",header=T,sep=",")
data<-cbind(data1,data2)
data<-rbind(data1,data2)
data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", 'Pronominality'))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', 'Pronominality'))
data$Language=factor(data$Language,levels=c('Afrikaans','Persian','Japanese','Hindi','Urdu'))
p<-ggplot(data, aes(x=Factor,y=Mean,color=Factor)) +
geom_errorbar(aes(ymax = CI975, ymin = CI25), width=.1, position=position_dodge(.9)) +
#  geom_line() +
geom_point() +
#  geom_text(aes(label=Parameters), vjust=-1,position=position_dodge(.9),size=2.5)+
labs(x="Factors")+labs(fill='Factor')+
#  scale_y_continuous(limits=c(-3.5,4)) +
labs(y="Coefficient") +
scale_color_manual(values=wes_palette(n=3, name="IsleofDogs1"))+
facet_wrap(~Language,ncol=6)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank()) +
theme(legend.position="top")
p
p<-ggplot(data, aes(x=Factor,y=Mean,color=Factor)) +
geom_errorbar(aes(ymax = CI975, ymin = CI25), width=.1, position=position_dodge(.9)) +
#  geom_line() +
geom_point() +
#  geom_text(aes(label=Parameters), vjust=-1,position=position_dodge(.9),size=2.5)+
labs(x="Factors")+labs(fill='Factor')+
scale_y_continuous(limits=c(-3.5,4)) +
labs(y="Coefficient") +
scale_color_manual(values=wes_palette(n=3, name="IsleofDogs1"))+
facet_wrap(~Language,ncol=6)+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank()) +
theme(legend.position="top")
p
ggsave("chapter5-preverbal-coeff.pdf",p,height=4)
data<-read.csv(file="preposition-postverbal.csv",header=T,sep=",")
data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", "Pronominality"))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', 'Pronominality'))
data$Language = factor(data$Language, levels=c('Arabic', 'Hebrew', 'Indonesian', 'Greek', 'Wolof', 'Irish', 'Latvian', 'Danish', 'English', 'Swedish',
'Norwegian', 'Portuguese', 'Romanian', 'French', 'Galician', 'Italian', 'Bulgarian', 'Serbian', 'Ukrainian', 'Finnish'))
data
data
data<-subset(data,Factor=="Dependency length")
data
cor(t1,method='spearman')
cor(t2,method='spearman')
cor(t3,method=spearman)
cor(t3,method='spearman')
cor(t4,method='spearman')
cor(t5,method='spearman')
data
data<-read.csv(file="postposition-postverbal.csv",header=T,sep=",")
data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", 'Pronominality'))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', 'Pronominality'))
data
data1=data
data1<-subset(data1,Factor="Dependency length")
data<-read.csv(file="preposition-postverbal.csv",header=T,sep=",")
data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", "Pronominality"))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', 'Pronominality'))
data$Language = factor(data$Language, levels=c('Arabic', 'Hebrew', 'Indonesian', 'Greek', 'Wolof', 'Irish', 'Latvian', 'Danish', 'English', 'Swedish',
'Norwegian', 'Portuguese', 'Romanian', 'French', 'Galician', 'Italian', 'Bulgarian', 'Serbian', 'Ukrainian', 'Finnish'))
data
data<-subset(data,Factor="Dependency length")
nrow(data)
data
data<-subset(data,Factor="Dependency length")
nrow(data)
data<-read.csv(file="preposition-postverbal.csv",header=T,sep=",")
data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", "Pronominality"))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', 'Pronominality'))
data$Language = factor(data$Language, levels=c('Arabic', 'Hebrew', 'Indonesian', 'Greek', 'Wolof', 'Irish', 'Latvian', 'Danish', 'English', 'Swedish',
'Norwegian', 'Portuguese', 'Romanian', 'French', 'Galician', 'Italian', 'Bulgarian', 'Serbian', 'Ukrainian', 'Finnish'))
data<-subset(data,Factor="Dependency length")
nrow(data)
data<-subset(data,Factor=="Dependency length")
data2<-rbind(data,data1)
nrow(data)
nrow(data2)
data1
data1<-subset(data1,Factor=="Dependency length")
data2<-rbind(data,data1)
nrow(data2)
mean(data2$Mean)
data<-read.csv(file="preposition-preverbal.csv",header=T,sep=",")
data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", "Pronominality"))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', "Pronominality"))
data$Language = factor(data$Language, levels=c('Afrikaans', 'Persian'))
data1<-subset(data,Factor=='Dependency Length')
data1
data1<-subset(data,Factor=="Dependency length")
data1
data<-read.csv(file="postposition-preverbal.csv",header=T,sep=",")
data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", 'Pronominality'))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', 'Pronominality'))
data$Language = factor(data$Language, levels=c('Japanese', 'Hindi', 'Urdu'))
data2<-subset(data,Factor=="Dependency Length")
data2
data
data2<-subset(data,Factor=="Dependency length")
data2
data3<-rbind(data1,data2)
mean(data3$Mean)
data<-read.csv(file="preposition-mix.csv",header=T,sep=",")
data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", 'Pronominality'))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', 'Pronominality'))
data$Language = factor(data$Language, levels=c('Dutch', 'German', 'Catalan', 'Spanish', 'Croatian', 'Czech', 'Polish', 'Russian', 'Slovak', 'Slovenian'))
data1 <- subset(data, Adposition == 'postverbal')
data2 <- subset(data, Adposition == 'preverbal')
data1<-subset(data1,Factor=="Dependency length")
data1
data1
data2<-subset(data2,Factor=="Dependency length")
data2
a=sum(data1$Mean)
b=sum(data2$Mean)
a
b
data<-read.csv(file="postposition-mix.csv",header=T,sep=",")
data = subset(data, !(Parameters %in% c('Accuracy', 'NP_defiteness', 'PP_defiteness', 'NP_pronominality', 'PP_pronominality')))
data$Parameters<-factor(data$Parameters,levels=c("Len", "Arg_status", 'Pronominality'))
colnames(data)[which(names(data) == "Parameters")] <- "Factor"
levels(data$Factor)[1] <- 'Dependency length'
levels(data$Factor)[2] <- 'Argument status'
data$Factor = factor(data$Factor, levels=c('Dependency length', 'Argument status', 'Pronominality'))
data
(a+0.79)/11
(b+0.13)/11
