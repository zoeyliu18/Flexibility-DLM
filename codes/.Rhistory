data1<-read.csv(file="dlm-vprep-new.csv",header=T,sep=",")
data1$Mean<-as.numeric(data1$Mean)
data1$Len<-factor(data1$Len,levels=c("Shorter PP closer","Longer PP closer", "Equal length"))
data1$Language<-factor(data1$Language,levels=c("Danish", "Norwegian", "Swedish", "Slovak", "Serbian", "Arabic", "Hebrew", "Greek", "Indonesian", "Galician", "Latvian", "Irish"))
p1<-ggplot(data1[,],aes(x=Len,y=Mean,fill=Len)) +
geom_bar(position=position_dodge(),stat='identity',colour='black')+
geom_text(aes(label=paste(Mean,"%")), vjust=-3.5,position=position_dodge(.9),size=2.6)+
geom_errorbar(aes(ymin=CI25, ymax=CI975),width=.1,position=position_dodge(.9))+
scale_fill_manual(values=c("#009E73","#999999", "#E69F00"))+
labs(x="Corpus")+labs(y="Percent (%)")+labs(fill="PP ordering")+
scale_y_continuous(limits=c(0,100))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank())+theme(legend.position="top")+
facet_wrap(~Language,ncol=6)
p1
ggsave("dlm-vprep.pdf",p1, width=8, height=4)
p1
setwd("~/Desktop/Experiments/multifactorial")
setwd("~/Desktop/Experiments/multifactorial/data")
af_zh = read.csv('Arabic-zh-data.csv', header=T, sep=',')
ar_en = read.csv('Arabic-en-data.csv', header=T, sep=',')
head(ar_en)
ar_en = read.csv('Arabic-en-data.csv', header=T, sep=',')
zh_zh = read.csv('Chinese-zh-data.csv', header=T, sep=',')
hr_en = read.csv('Croatian-en-data.csv', header=T, sep=',')
hr_zh = read.csv('Croatian-zh-data.csv', header=T, sep=',')
cs_en = read.csv('Czech-en-data.csv', header=T, sep=',')
cs_zh = read.csv('Czech-zh-data.csv', header=T, sep=',')
en_en = read.csv('English-en-data.csv', header=T, sep=',')
en_zh = read.csv('English-zh-data.csv', header=T, sep=',')
el_en = read.csv('Greek-en-data.csv', header=T, sep=',')
he_en = read.csv('Hebrew-en-data.csv', header=T, sep=',')
id_en = read.csv('Indonesian-en-data.csv', header=T, sep=',')
it_en = read.csv('Italian-en-data.csv', header=T, sep=',')
it_zh = read.csv('Italian-zh-data.csv', header=T, sep=',')
ja_ja = read.csv('Japanese-ja-data.csv', header=T, sep=',')
fa_zh = read.csv('Persian-zh-data.csv', header=T, sep=',')
pl_en = read.csv('Polish-en-data.csv', header=T, sep=',')
pl_zh = read.csv('Polish-zh-data.csv', header=T, sep=',')
ru_en = read.csv('Russian-en-data.csv', header=T, sep=',')
ru_zh = read.csv('Russian-zh-data.csv', header=T, sep=',')
sl_en = read.csv('Slovenian-en-data.csv', header=T, sep=',')
sl_zh = read.csv('Slovenian-zh-data.csv', header=T, sep=',')
es_en = read.csv('Spanish-en-data.csv', header=T, sep=',')
es_zh = read.csv('Spanish-zh-data.csv', header=T, sep=',')
uk_en = read.csv('Ukrainian-en-data.csv', header=T, sep=',')
uk_zh = read.csv('Ukrainian-zh-data.csv', header=T, sep=',')
ar_en$Language=rep(c('Arabic'),nrow(ar_en))
nrow(ar_en)
head(ar_en)
ar_en = read.csv('Arabic-en-data.csv', header=T, sep=',')
ar_en$Language=rep(c('Arabic'),nrow(ar_en))
ar_en$Family=rep(c('Afro-Asiatic'),nrow(ar_en))
ar_en$Genus=rep(c('Semitic'),nrow(ar_en))
zh_zh = read.csv('Chinese-zh-data.csv', header=T, sep=',')
zh_zh$Language=rep(c('Chinese'),nrow(zh_zh))
zh_zh$Family=rep(c('Afro-Asiatic'),nrow(zh_zh))
zh_zh$Genus=rep(c('Chinese'),nrow(zh_zh))
hr_en = read.csv('Croatian-en-data.csv', header=T, sep=',')
hr_en$Language=rep(c('Croatian'),nrow(hr_en))
hr_en$Family=rep(c('IE'),nrow(hr_en))
hr_en$Genus=rep(c('Slavic'),nrow(hr_en))
hr_zh = read.csv('Croatian-zh-data.csv', header=T, sep=',')
hr_zh$Language=rep(c('Croatian'),nrow(hr_zh))
hr_zh$Family=rep(c('IE'),nrow(hr_zh))
hr_zh$Genus=rep(c('Slavic'),nrow(hr_zh))
cs_en = read.csv('Czech-en-data.csv', header=T, sep=',')
cs_en$Language=rep(c('Czech'),nrow(cs_en))
cs_en$Family=rep(c('IE'),nrow(cs_en))
cs_en$Genus=rep(c('Slavic'),nrow(cs_en))
cs_zh = read.csv('Czech-zh-data.csv', header=T, sep=',')
cs_zh$Language=rep(c('Czech'),nrow(cs_zh))
cs_zh$Family=rep(c('IE'),nrow(cs_zh))
cs_zh$Genus=rep(c('Slavic'),nrow(cs_zh))
en_en = read.csv('English-en-data.csv', header=T, sep=',')
en_en$Language=rep(c('English'),nrow(en_en))
en_en$Family=rep(c('IE'),nrow(en_en))
en_en$Genus=rep(c('Germanic'),nrow(en_en))
en_zh = read.csv('English-zh-data.csv', header=T, sep=',')
en_zh$Language=rep(c('English'),nrow(en_zh))
en_zh$Family=rep(c('IE'),nrow(en_zh))
en_zh$Genus=rep(c('Germanic'),nrow(en_zh))
el_en = read.csv('Greek-en-data.csv', header=T, sep=',')
el_en$Language=rep(c('Greek'),nrow(el_en))
el_en$Family=rep(c('IE'),nrow(el_en))
el_en$Genus=rep(c('Greek'),nrow(el_en))
he_en = read.csv('Hebrew-en-data.csv', header=T, sep=',')
he_en$Language=rep(c('Hebrew'),nrow(he_en))
he_en$Family=rep(c('Afro-Asiatic'),nrow(he_en))
he_en$Genus=rep(c('Semitic'),nrow(he_en))
id_en = read.csv('Indonesian-en-data.csv', header=T, sep=',')
id_en$Language=rep(c('Indonesian'),nrow(id_en))
id_en$Family=rep(c('Austronesian'),nrow(id_en))
id_en$Genus=rep(c('Malayo-Sumbawan'),nrow(id_en))
it_en = read.csv('Italian-en-data.csv', header=T, sep=',')
it_en$Language=rep(c('Italian'),nrow(it_en))
it_en$Family=rep(c('IE'),nrow(it_en))
it_en$Genus=rep(c('Romance'),nrow(it_en))
it_zh = read.csv('Italian-zh-data.csv', header=T, sep=',')
it_zh$Language=rep(c('Italian'),nrow(it_zh))
it_zh$Family=rep(c('IE'),nrow(it_zh))
it_zh$Genus=rep(c('Romance'),nrow(it_zh))
ja_ja = read.csv('Japanese-ja-data.csv', header=T, sep=',')
ja_ja$Language=rep(c('Japanese'),nrow(ja_ja))
ja_ja$Family=rep(c('Japanese'),nrow(ja_ja))
ja_ja$Genus=rep(c('Japanese'),nrow(ja_ja))
fa_zh = read.csv('Persian-zh-data.csv', header=T, sep=',')
fa_zh$Language=rep(c('Persian'),nrow(fa_zh))
fa_zh$Family=rep(c('IE'),nrow(fa_zh))
fa_zh$Genus=rep(c('Iranian'),nrow(fa_zh))
pl_en = read.csv('Polish-en-data.csv', header=T, sep=',')
pl_en$Language=rep(c('Polish'),nrow(pl_en))
pl_en$Family=rep(c('IE'),nrow(pl_en))
pl_en$Genus=rep(c('Slavic'),nrow(pl_en))
pl_zh = read.csv('Polish-zh-data.csv', header=T, sep=',')
pl_zh$Language=rep(c('Polish'),nrow(pl_zh))
pl_zh$Family=rep(c('IE'),nrow(pl_zh))
pl_zh$Genus=rep(c('Slavic'),nrow(pl_zh))
ru_en = read.csv('Russian-en-data.csv', header=T, sep=',')
ru_en$Language=rep(c('Russian'),nrow(ru_en))
ru_en$Family=rep(c('IE'),nrow(ru_en))
ru_en$Genus=rep(c('Slavic'),nrow(ru_en))
ru_zh = read.csv('Russian-zh-data.csv', header=T, sep=',')
ru_zh$Language=rep(c('Russian'),nrow(ru_zh))
ru_zh$Family=rep(c('IE'),nrow(ru_zh))
ru_zh$Genus=rep(c('Slavic'),nrow(ru_zh))
sl_en = read.csv('Slovenian-en-data.csv', header=T, sep=',')
sl_en$Language=rep(c('Slovenian'),nrow(sl_en))
sl_en$Family=rep(c('IE'),nrow(sl_en))
sl_en$Genus=rep(c('Slavic'),nrow(sl_en))
sl_zh = read.csv('Slovenian-zh-data.csv', header=T, sep=',')
sl_zh$Language=rep(c('Slovenian'),nrow(sl_zh))
sl_zh$Family=rep(c('IE'),nrow(sl_zh))
sl_zh$Genus=rep(c('Slavic'),nrow(sl_zh))
es_en = read.csv('Spanish-en-data.csv', header=T, sep=',')
es_en$Language=rep(c('Spanish'),nrow(es_en))
es_en$Family=rep(c('IE'),nrow(es_en))
es_en$Genus=rep(c('Romance'),nrow(es_en))
es_zh = read.csv('Spanish-zh-data.csv', header=T, sep=',')
es_zh$Language=rep(c('Spanish'),nrow(es_zh))
es_zh$Family=rep(c('IE'),nrow(es_zh))
es_zh$Genus=rep(c('Romance'),nrow(es_zh))
uk_en = read.csv('Ukrainian-en-data.csv', header=T, sep=',')
uk_en$Language=rep(c('Ukrainian'),nrow(uk_en))
uk_en$Family=rep(c('IE'),nrow(uk_en))
uk_en$Genus=rep(c('Slavic'),nrow(uk_en))
uk_zh = read.csv('Ukrainian-zh-data.csv', header=T, sep=',')
uk_zh$Language=rep(c('Ukrainian'),nrow(uk_zh))
uk_zh$Family=rep(c('IE'),nrow(uk_zh))
uk_zh$Genus=rep(c('Slavic'),nrow(uk_zh))
all_data = cbind(ar_en, zh_zh, hr_en, hr_zh, cs_en, cs_zh, en_en, en_zh, el_en, he_en, id_en, it_en, it_zh, ja_ja, fa_zh, pl_en, pl_zh, ru_en, ru_zh, sl_en, sl_zh, es_en, es_zh, uk_en, uk_zh)
all_data = rbind(ar_en, zh_zh, hr_en, hr_zh, cs_en, cs_zh, en_en, en_zh, el_en, he_en, id_en, it_en, it_zh, ja_ja, fa_zh, pl_en, pl_zh, ru_en, ru_zh, sl_en, sl_zh, es_en, es_zh, uk_en, uk_zh)
head(all_data)
levels(as.factor(all_data$Language))
library(ggplot2)
library(gridExtra)
library(wesanderson)
library(lme4)
model = lmer(Order ~ Len + Lexical_frequency + PMI + Semantic_closeness + Predictability + Ponominality + (1|Verb) + (1|Language) + (1|Family) + (1|Genus), data)
?lmer
model = lmer(Order ~ Len + Lexical_frequency + PMI + Semantic_closeness + Predictability + Ponominality + (1|Verb) + (1|Language) + (1|Family) + (1|Genus), data=all_data, family=binomial)
head(all_data)
model = lmer(Order ~ Len + Lexical_frequency + PMI + Semantic_closeness + Predictability + Pronominality + (1|Verb) + (1|Language) + (1|Family) + (1|Genus), data=all_data, family=binomial)
model = glmer(Order ~ Len + Lexical_frequency + PMI + Semantic_closeness + Predictability + Pronominality + (1|Verb) + (1|Language) + (1|Family) + (1|Genus), data=all_data, family=binomial)
?isSingular
isSingular(model,tol=1e-05)
summary(model)
ar_len=fixed(model) + ranef(model)$Family
ar_len=fixef(model) + ranef(model)$Family
ar=fixef(model) + ranef(model)$Family
ar
ar$Family=rownames(ar)
ar
fixef(model)
fixef(model)+ranef(model)$Family
install.packages(â€˜mctestâ€™)
install.packages("mctest")
library(mctest)
head(all_data)
omcdiag(all_data[,],all_data$Order)
all_data[,c(1:2,4:5)]
a<-all_data[,c(1:2,4:5)]
head(a)
a<-all_data[,c(1:3,4:5)]
head(a)
head(all_data)
a<-all_data[,c(1:3,4:7)]
head(a)
omcdiag(all_data[,c(1:3,4:7)],all_data$Order)
?omcdiag
imcdiag(all_data[,c(1:3,4:7)],all_data$Order)
?imcdiag
head(all_data)
a<-all_data[,c(1:3,5:7)]
head(a)
a<-all_data[,c(1:4,5:7)]
head(a)
a<-all_data[,c(1:4,6:7)]
head(a)
b<-all_data[,c(2:3,5:7)]
head(b)
b<-all_data[,c(2:3,4:7)]
head(b)
omcdiag(all_data[,c(2:3,4:7)],all_data$Order)
imcdiag(all_data[,c(2:3,4:7)],all_data$Order)
a<-all_data[,c(2:4,5:7)]
head(a)
a<-all_data[,c(2:3,5:7)]
head(a)
a<-all_data[,c(2:4,6:7)]
head(a)
omcdiag(all_data[,c(2:4,6:7)],all_data$Order)
imcdiag(all_data[,c(2:4,6:7)],all_data$Order)
omcdiag(all_data[,c(2:3,4:7)],all_data$Order)
imcdiag(all_data[,c(2:3,4:7)],all_data$Order)
model1 = glmer(Order ~ Len + Lexical_frequency + PMI + Predictability + Pronominality + (1|Verb) + (1|Language) + (1|Family) + (1|Genus) + (Len | Language) + (Lexical_frequency | Language) +
(PMI | Language)  + (Predictability | Language) + (Pronominality | Language), data=all_data, family=binomial)
model1=glmer(Order~Len+(Len|Language),family=binomial,data=all_data)
summary(model1)
ranef(model1)
model1=glmer(Order~Len+(Len|Language,Family),family=binomial,data=all_data)
model1=glmer(Order~Len+(Len|Language+Family),family=binomial,data=all_data)
ar_en = read.csv('Arabic-en-data.csv', header=T, sep=',')
ar_en$Language=rep(c('Arabic postverbal'),nrow(ar_en))
ar_en$Family=rep(c('Afro-Asiatic'),nrow(ar_en))
ar_en$Genus=rep(c('Semitic'),nrow(ar_en))
zh_zh = read.csv('Chinese-zh-data.csv', header=T, sep=',')
zh_zh$Language=rep(c('Chinese preverbal'),nrow(zh_zh))
zh_zh$Family=rep(c('Afro-Asiatic'),nrow(zh_zh))
zh_zh$Genus=rep(c('Chinese'),nrow(zh_zh))
hr_en = read.csv('Croatian-en-data.csv', header=T, sep=',')
hr_en$Language=rep(c('Croatian postverbal'),nrow(hr_en))
hr_en$Family=rep(c('IE'),nrow(hr_en))
hr_en$Genus=rep(c('Slavic'),nrow(hr_en))
hr_zh = read.csv('Croatian-zh-data.csv', header=T, sep=',')
hr_zh$Language=rep(c('Croatian preverbal'),nrow(hr_zh))
hr_zh$Family=rep(c('IE'),nrow(hr_zh))
hr_zh$Genus=rep(c('Slavic'),nrow(hr_zh))
cs_en = read.csv('Czech-en-data.csv', header=T, sep=',')
cs_en$Language=rep(c('Czech postverbal'),nrow(cs_en))
cs_en$Family=rep(c('IE'),nrow(cs_en))
cs_en$Genus=rep(c('Slavic'),nrow(cs_en))
cs_zh = read.csv('Czech-zh-data.csv', header=T, sep=',')
cs_zh$Language=rep(c('Czech preverbal'),nrow(cs_zh))
cs_zh$Family=rep(c('IE'),nrow(cs_zh))
cs_zh$Genus=rep(c('Slavic'),nrow(cs_zh))
en_en = read.csv('English-en-data.csv', header=T, sep=',')
en_en$Language=rep(c('English postverbal'),nrow(en_en))
en_en$Family=rep(c('IE'),nrow(en_en))
en_en$Genus=rep(c('Germanic'),nrow(en_en))
en_zh = read.csv('English-zh-data.csv', header=T, sep=',')
en_zh$Language=rep(c('English preverbal'),nrow(en_zh))
en_zh$Family=rep(c('IE'),nrow(en_zh))
en_zh$Genus=rep(c('Germanic'),nrow(en_zh))
el_en = read.csv('Greek-en-data.csv', header=T, sep=',')
el_en$Language=rep(c('Greek postverbal'),nrow(el_en))
el_en$Family=rep(c('IE'),nrow(el_en))
el_en$Genus=rep(c('Greek'),nrow(el_en))
he_en = read.csv('Hebrew-en-data.csv', header=T, sep=',')
he_en$Language=rep(c('Hebrew postverbal'),nrow(he_en))
he_en$Family=rep(c('Afro-Asiatic'),nrow(he_en))
he_en$Genus=rep(c('Semitic'),nrow(he_en))
id_en = read.csv('Indonesian-en-data.csv', header=T, sep=',')
id_en$Language=rep(c('Indonesian postverbal'),nrow(id_en))
id_en$Family=rep(c('Austronesian'),nrow(id_en))
id_en$Genus=rep(c('Malayo-Sumbawan'),nrow(id_en))
it_en = read.csv('Italian-en-data.csv', header=T, sep=',')
it_en$Language=rep(c('Italian postverbal'),nrow(it_en))
it_en$Family=rep(c('IE'),nrow(it_en))
it_en$Genus=rep(c('Romance'),nrow(it_en))
it_zh = read.csv('Italian-zh-data.csv', header=T, sep=',')
it_zh$Language=rep(c('Italian preverbal'),nrow(it_zh))
it_zh$Family=rep(c('IE'),nrow(it_zh))
it_zh$Genus=rep(c('Romance'),nrow(it_zh))
ja_ja = read.csv('Japanese-ja-data.csv', header=T, sep=',')
ja_ja$Language=rep(c('Japanese preverbal'),nrow(ja_ja))
ja_ja$Family=rep(c('Japanese'),nrow(ja_ja))
ja_ja$Genus=rep(c('Japanese'),nrow(ja_ja))
fa_zh = read.csv('Persian-zh-data.csv', header=T, sep=',')
fa_zh$Language=rep(c('Persian preverbal'),nrow(fa_zh))
fa_zh$Family=rep(c('IE'),nrow(fa_zh))
fa_zh$Genus=rep(c('Iranian'),nrow(fa_zh))
pl_en = read.csv('Polish-en-data.csv', header=T, sep=',')
pl_en$Language=rep(c('Polish postverbal'),nrow(pl_en))
pl_en$Family=rep(c('IE'),nrow(pl_en))
pl_en$Genus=rep(c('Slavic'),nrow(pl_en))
pl_zh = read.csv('Polish-zh-data.csv', header=T, sep=',')
pl_zh$Language=rep(c('Polish preverbal'),nrow(pl_zh))
pl_zh$Family=rep(c('IE'),nrow(pl_zh))
pl_zh$Genus=rep(c('Slavic'),nrow(pl_zh))
ru_en = read.csv('Russian-en-data.csv', header=T, sep=',')
ru_en$Language=rep(c('Russian postverbal'),nrow(ru_en))
ru_en$Family=rep(c('IE'),nrow(ru_en))
ru_en$Genus=rep(c('Slavic'),nrow(ru_en))
ru_zh = read.csv('Russian-zh-data.csv', header=T, sep=',')
ru_zh$Language=rep(c('Russian postverbal'),nrow(ru_zh))
ru_zh$Family=rep(c('IE'),nrow(ru_zh))
ru_zh$Genus=rep(c('Slavic'),nrow(ru_zh))
sl_en = read.csv('Slovenian-en-data.csv', header=T, sep=',')
sl_en$Language=rep(c('Slovenian postverbal'),nrow(sl_en))
sl_en$Family=rep(c('IE'),nrow(sl_en))
sl_en$Genus=rep(c('Slavic'),nrow(sl_en))
sl_zh = read.csv('Slovenian-zh-data.csv', header=T, sep=',')
sl_zh$Language=rep(c('Slovenian preverbal'),nrow(sl_zh))
sl_zh$Family=rep(c('IE'),nrow(sl_zh))
sl_zh$Genus=rep(c('Slavic'),nrow(sl_zh))
es_en = read.csv('Spanish-en-data.csv', header=T, sep=',')
es_en$Language=rep(c('Spanish postverbal'),nrow(es_en))
es_en$Family=rep(c('IE'),nrow(es_en))
es_en$Genus=rep(c('Romance'),nrow(es_en))
es_zh = read.csv('Spanish-zh-data.csv', header=T, sep=',')
es_zh$Language=rep(c('Spanish preverbal'),nrow(es_zh))
es_zh$Family=rep(c('IE'),nrow(es_zh))
es_zh$Genus=rep(c('Romance'),nrow(es_zh))
uk_en = read.csv('Ukrainian-en-data.csv', header=T, sep=',')
uk_en$Language=rep(c('Ukrainian postverbal'),nrow(uk_en))
uk_en$Family=rep(c('IE'),nrow(uk_en))
uk_en$Genus=rep(c('Slavic'),nrow(uk_en))
uk_zh = read.csv('Ukrainian-zh-data.csv', header=T, sep=',')
uk_zh$Language=rep(c('Ukrainian preverbal'),nrow(uk_zh))
uk_zh$Family=rep(c('IE'),nrow(uk_zh))
uk_zh$Genus=rep(c('Slavic'),nrow(uk_zh))
all_data = rbind(ar_en, zh_zh, hr_en, hr_zh, cs_en, cs_zh, en_en, en_zh, el_en, he_en, id_en, it_en, it_zh, ja_ja, fa_zh, pl_en, pl_zh, ru_en, ru_zh, sl_en, sl_zh, es_en, es_zh, uk_en, uk_zh)
m1<-glmer(Order~Len+(1+Len|Language),family=binomial,data=all_data)
summary(m1)
ranef(m1)
m1<-glmer(Order~Len+(1+Len|Language)+Lexical_frequency+(1+Lexical_frequency|language),family=binomial,data=all_data)
m1<-glmer(Order~Len+(1+Len|Language)+Lexical_frequency+(1+Lexical_frequency|Language),family=binomial,data=all_data)
summary(m1)
ranef(m1)
model = glmer(Order ~ Len + (1+Len|Language) + Lexical_frequency + (1+Lexical_frequency|Language) + PMI + (1+PMI|Language) + Semantic_closeness + (1+Semantic_closeness|Language) +
Predictability + (1+Predictability|Language) + Pronominality + (1+Pronominality|Language) + (1|Verb) + (1|Family) + (1|Genus), family=binomial, data=all_data)
setwd("~/Desktop/Experiments/hnpm/codes")
data<-read.csv(file="variability.csv",header=T,sep=",")
data$Structure <- paste(data[,3],data[,2])
p<-ggplot(data[,], aes(y=Language, x=Mean, color=Position)) +
#  geom_point(aes(colour=factor(Structure)))+
geom_pointrange(aes(xmin=CI25, xmax=CI975)) +
geom_text(aes(label=paste(Language)), hjust=0.36, vjust=-1.8,position=position_dodge(.5),size=3.5) +
labs(x="") +
labs(y="Variability") +
labs(fill="")+
scale_y_continuous(limits=c(0,1.2)) +
scale_color_manual(values=wes_palette(n=4, name="Moonrise2"))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y = element_text( size = 14)) +
theme(legend.position="top",
legend.title = element_text(size=12))
p
p<-ggplot(data[,], aes(y=Language, x=Mean, color=Position)) +
#  geom_point(aes(colour=factor(Structure)))+
geom_pointrange(aes(ymin=CI25, ymax=CI975)) +
geom_text(aes(label=paste(Language)), hjust=0.36, vjust=-1.8,position=position_dodge(.5),size=3.5) +
labs(x="") +
labs(y="Variability") +
labs(fill="")+
scale_y_continuous(limits=c(0,1.2)) +
scale_color_manual(values=wes_palette(n=4, name="Moonrise2"))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y = element_text( size = 14)) +
theme(legend.position="top",
legend.title = element_text(size=12))
p
p<-ggplot(data[,], aes(y=Language, x=Mean, color=Position))
p
p<-ggplot(data[,], aes(y=Language, x=Mean, color=Position)) +
#  geom_point(aes(colour=factor(Structure)))+
geom_pointrange(aes(xmin=CI25, xmax=CI975))
p
p<-ggplot(data[,], aes(y=Language, x=Mean, color=Position)) +
geom_errorbarh(aes(xmin=CI25, xmax=CI975, height=0))
p
p<-ggplot(data[,], aes(y=Language, x=Mean, color=Position)) +
geom_errorbarh(aes(xmin=CI25, xmax=CI975, height=0)) +
geom_point()
p
p<-ggplot(data[,], aes(y=Language, x=Mean, color=Position)) +
geom_errorbarh(aes(xmin=CI25, xmax=CI975, height=0)) +
geom_point()
#  geom_point(aes(colour=factor(Structure)))+
#  geom_pointrange(aes(xmin=CI25, xmax=CI975)) +
#  geom_text(aes(label=paste(Language)), hjust=0.36, vjust=-1.8,position=position_dodge(.5),size=3.5) +
labs(x="Variability") +
labs(y="Language") +
labs(fill="")+
#  scale_y_continuous(limits=c(0,1.2)) +
scale_color_manual(values=wes_palette(n=2, name="Moonrise2"))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y = element_text( size = 14))
p<-ggplot(data[,], aes(y=Language, x=Mean, color=Position)) +
geom_errorbarh(aes(xmin=CI25, xmax=CI975, height=0)) +
geom_point() +
#  geom_point(aes(colour=factor(Structure)))+
#  geom_pointrange(aes(xmin=CI25, xmax=CI975)) +
#  geom_text(aes(label=paste(Language)), hjust=0.36, vjust=-1.8,position=position_dodge(.5),size=3.5) +
labs(x="Variability") +
labs(y="Language") +
labs(fill="")+
#  scale_y_continuous(limits=c(0,1.2)) +
scale_color_manual(values=wes_palette(n=2, name="Moonrise2"))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y = element_text( size = 14))
p
p<-ggplot(data[,], aes(y=Language, x=Mean, color=Position)) +
geom_errorbarh(aes(xmin=CI25, xmax=CI975, height=0)) +
geom_point() +
#  geom_point(aes(colour=factor(Structure)))+
#  geom_pointrange(aes(xmin=CI25, xmax=CI975)) +
#  geom_text(aes(label=paste(Language)), hjust=0.36, vjust=-1.8,position=position_dodge(.5),size=3.5) +
labs(x="Variability") +
labs(y="Language") +
labs(fill="")+
#  scale_y_continuous(limits=c(0,1.2)) +
scale_color_manual(values=wes_palette(n=2, name="Moonrise2"))+
theme(axis.title.x=element_text( size = 14),
axis.text.x=element_blank(),
axis.title.y = element_text( size = 14))
p
ggsave("variability.pdf", p)
data$Language<-factor(data$Language,levels=c("Arabic", "Hebrew", " Indonesian", "Greek", "Wolof", "Irish", "Latvian", "Danish", "English", "Swedisn", "Norwegian", "Portuguese",
"Romanian", "French", "Galician", "Italian", "Bulgarian", "Serbian", "Ukrainian", "Finnish",
"Afrikaans", "Persian", "Japanese", "Hindi", "Urdu", "Catalan", "Spanish", "Dutch", "German", "Croatian", "Czech",
"Polish", "Russian", "Slovak", "Slovenian", "Estonian"))
p<-ggplot(data[,], aes(y=Language, x=Mean, color=Position)) +
geom_errorbarh(aes(xmin=CI25, xmax=CI975, height=0)) +
geom_point() +
#  geom_point(aes(colour=factor(Structure)))+
#  geom_pointrange(aes(xmin=CI25, xmax=CI975)) +
#  geom_text(aes(label=paste(Language)), hjust=0.36, vjust=-1.8,position=position_dodge(.5),size=3.5) +
labs(x="Variability") +
labs(y="Language") +
labs(fill="")+
#  scale_y_continuous(limits=c(0,1.2)) +
scale_color_manual(values=wes_palette(n=2, name="Moonrise2"))+
theme(axis.title.x=element_text( size = 14),
axis.text.x=element_blank(),
axis.title.y = element_text( size = 14))
p
data$Language<-factor(data$Language,levels=c("Arabic", "Hebrew", " Indonesian", "Greek", "Wolof", "Irish", "Latvian", "Danish", "English", "Swedish", "Norwegian", "Portuguese",
"Romanian", "French", "Galician", "Italian", "Bulgarian", "Serbian", "Ukrainian", "Finnish",
"Afrikaans", "Persian", "Japanese", "Hindi", "Urdu", "Catalan", "Spanish", "Dutch", "German", "Croatian", "Czech",
"Polish", "Russian", "Slovak", "Slovenian", "Estonian"))
p<-ggplot(data[,], aes(y=Language, x=Mean, color=Position)) +
geom_errorbarh(aes(xmin=CI25, xmax=CI975, height=0)) +
geom_point() +
#  geom_point(aes(colour=factor(Structure)))+
#  geom_pointrange(aes(xmin=CI25, xmax=CI975)) +
#  geom_text(aes(label=paste(Language)), hjust=0.36, vjust=-1.8,position=position_dodge(.5),size=3.5) +
labs(x="Variability") +
labs(y="Language") +
labs(fill="")+
#  scale_y_continuous(limits=c(0,1.2)) +
scale_color_manual(values=wes_palette(n=2, name="Moonrise2"))+
theme(axis.title.x=element_text( size = 14),
axis.text.x=element_blank(),
axis.title.y = element_text( size = 14))
p
data<-read.csv(file="variability.csv",header=T,sep=",")
data$Structure <- paste(data[,3],data[,2])
data$Language<-factor(data$Language,levels=c("Arabic", "Hebrew", " Indonesian", "Greek", "Wolof", "Irish", "Latvian", "Danish", "English", "Swedish", "Norwegian", "Portuguese",
"Romanian", "French", "Galician", "Italian", "Bulgarian", "Serbian", "Ukrainian", "Finnish",
"Afrikaans", "Persian", "Japanese", "Hindi", "Urdu", "Catalan", "Spanish", "Dutch", "German", "Croatian", "Czech",
"Polish", "Russian", "Slovak", "Slovenian", "Estonian"))
p<-ggplot(data[,], aes(y=Language, x=Mean, color=Position)) +
geom_errorbarh(aes(xmin=CI25, xmax=CI975, height=0)) +
geom_point() +
#  geom_point(aes(colour=factor(Structure)))+
#  geom_pointrange(aes(xmin=CI25, xmax=CI975)) +
#  geom_text(aes(label=paste(Language)), hjust=0.36, vjust=-1.8,position=position_dodge(.5),size=3.5) +
labs(x="Variability") +
labs(y="Language") +
labs(fill="")+
#  scale_y_continuous(limits=c(0,1.2)) +
scale_color_manual(values=wes_palette(n=2, name="Moonrise2"))+
theme(axis.title.x=element_text( size = 14),
axis.text.x=element_blank(),
axis.title.y = element_text( size = 14))
p
data<-read.csv(file="variability.csv",header=T,sep=",")
data$Structure <- paste(data[,3],data[,2])
levels(as.factor(data$Language))
data$Language<-factor(data$Language,levels=c("Arabic", "Hebrew", " Indonesian", "Greek", "Wolof", "Irish", "Latvian", "Danish", "English", "Swedish", "Norwegian", "Portuguese",
"Romanian", "French", "Galician", "Italian", "Bulgarian", "Serbian", "Ukrainian", "Finnish",
"Afrikaans", "Persian", "Japanese", "Hindi", "Urdu", "Catalan", "Spanish", "Dutch", "German", "Croatian", "Czech",
"Polish", "Russian", "Slovak", "Slovenian", "Estonian"))
levels(as.factor(data$Language))
data<-read.csv(file="variability.csv",header=T,sep=",")
data$Structure <- paste(data[,3],data[,2])
data$Language<-factor(data$Language,levels=c("Arabic", "Hebrew", "Indonesian", "Greek", "Wolof", "Irish", "Latvian", "Danish", "English", "Swedish", "Norwegian", "Portuguese",
"Romanian", "French", "Galician", "Italian", "Bulgarian", "Serbian", "Ukrainian", "Finnish",
"Afrikaans", "Persian", "Japanese", "Hindi", "Urdu", "Catalan", "Spanish", "Dutch", "German", "Croatian", "Czech",
"Polish", "Russian", "Slovak", "Slovenian", "Estonian"))
p<-ggplot(data[,], aes(y=Language, x=Mean, color=Position)) +
geom_errorbarh(aes(xmin=CI25, xmax=CI975, height=0)) +
geom_point() +
#  geom_point(aes(colour=factor(Structure)))+
#  geom_pointrange(aes(xmin=CI25, xmax=CI975)) +
#  geom_text(aes(label=paste(Language)), hjust=0.36, vjust=-1.8,position=position_dodge(.5),size=3.5) +
labs(x="Variability") +
labs(y="Language") +
labs(fill="")+
#  scale_y_continuous(limits=c(0,1.2)) +
scale_color_manual(values=wes_palette(n=2, name="Moonrise2"))+
theme(axis.title.x=element_text( size = 14),
axis.text.x=element_blank(),
axis.title.y = element_text( size = 14))
p
ggsave("variability.pdf", p)
